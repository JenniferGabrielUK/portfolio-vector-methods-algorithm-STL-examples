#include <iostream>
#include <iomanip>
#include <vector>
#include <numeric>
#include <algorithm>
#include <set>

template <typename T>
void display(const std::vector<T>& vec) {
	std::cout << "[ ";
	for (const auto& elem : vec)
		std::cout << elem << " ";
	std::cout << "]" << std::endl;
}

int main() {
std::cout << std::setw(30) << std::left << std::setfill('-') << "\n" << std::endl;
	std::vector<int> vec_1{ 1,2,3,4,5,6,7,8,9,10 };
	std::vector <int> vec_2{ 100,200,300,400 };
	std::vector <double> vec_3{ 1.1,1.3,1.4,1.5,1.6,1.7 };
	std::vector <double> vec_4{ 11.2,12.3,12.4 };
	display(vec_1);
	display(vec_2);
	std::cout << std::endl;
	auto it = std::find(vec_1.begin(), vec_1.end(), 5);
	if (it != vec_1.end()) {
		std::cout << "inserting..." << std::endl;
		vec_1.insert(it, vec_2.begin(), vec_2.end());
	}
	else {
		std::cout << "Sorry, 5 not found." << std::endl;
	}
	display(vec_1);
	std::cout << std::setw(30) << std::left << std::setfill('-') << "\n" << std::endl;
	auto it_1 = std::find(vec_3.begin(), vec_3.end(), 1.5);
	if (it_1 != vec_3.end()) {
		std::cout << "inserting ";
		display(vec_4);
		vec_3.insert(it_1, vec_4.begin(), vec_4.end());
	}
	else {
		std::cout << "Sorry, 1.5 not found." << std::endl;
	}
	display(vec_3);
return 0;
}
